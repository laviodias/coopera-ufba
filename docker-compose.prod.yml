services:
  db:
    container_name: db
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: marketplace_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"

  redis:
    image: redis:7.2-alpine
    volumes:
      - redis-data:/data
    networks:
      - app-network

  backend:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    env_file:
      - ./apps/api/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - app-network

  frontend:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./apps/web/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
    networks:
      - app-network

volumes:
  db-data:
  redis-data:

networks:
  app-network:
    driver: bridge