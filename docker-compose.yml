services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: marketplace_db
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"

  redis:
    image: redis:7.2-alpine
    container_name: redis_marketplace
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  node:
    image: "node:22-alpine3.20"
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ./apps/api:/home/node/app
    depends_on:
      - db
      - redis
    expose:
      - "8080"
    ports: 
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:root@db:5432/marketplace_db?schema=public
    entrypoint: sh -c "echo 'Limpando arquivos...' && rm -rf node_modules package-lock.json dist tsconfig.build.tsbuildinfo && echo 'Limpando cache npm...' && npm cache clean --force && echo 'Instalando dependências...' && npm install --legacy-peer-deps && echo 'Gerando Prisma...' && npx prisma generate && echo 'Aplicando migrações do banco...' && npx prisma migrate deploy && echo 'Executando seed do banco...' && npm run seed-db && echo 'Executando build...' && npm run build && echo 'Verificando dist...' && ls -la dist/ && echo 'Iniciando servidor...' && npm run start:dev"

  frontend:
    image: "node:22-alpine"
    user: "node"
    working_dir: /home/node/web
    volumes:
      - ./apps/web:/home/node/web
    depends_on:
      - node
    expose:
      - "3001"
    ports: 
      - "3001:3001"
    entrypoint: sh -c 'npm install && npm run dev'

  prisma:
    image: "node:22-alpine"
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ./apps/api:/home/node/app
    depends_on:
      - node
    expose:
      - "5555"
    ports: 
      - "5555:5555"
    entrypoint: sh -c 'npx prisma studio'

volumes:
  redis-data:
